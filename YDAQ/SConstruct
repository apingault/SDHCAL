import sys,os,commands
import  os
import re
import sys
DHCAL_ROOT=os.path.abspath("..")

fres=os.popen('uname -r')
kl=fres.readline().split(".")

platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"
print kl[len(kl)-2][0:3]
fres=os.popen('uname -p')
kp=fres.readline()
osv=kp[0:len(kp)-1]

print platform,osv

Bit64=os.uname()[4]=='x86_64'

Arm=os.uname()[4]=='armv7l'

if Arm or platform=="UBUNTU":
  boostsystem='boost_system'
  boostthread='boost_thread'
else:
  boostsystem='boost_system-mt'
  boostthread='boost_thread-mt'




LIBRARY_SOURCES=Glob("#src/*.cpp")
INCLUDES=['include','/opt/dhcal/yami/include','/opt/dhcal/yami/src/cpp/examples/common_util']
if (platform=="SLC5"):
    INCLUDES.append('/usr/include/boost141')
CPPFLAGS=["-pthread","-O2","-DLINUX", "-DREENTRANT" ,"-Dlinux"]

#SDHCAL_RPI=os.getenv("SDHCAL_RPI")
#if (SDHCAL_RPI==None):
#	print "please specify SDHCAL_RPI"
#	exit()
#INCLUDES.append(SDHCAL_RPI+"/include")



LIBRARIES=["pthread",boostsystem,boostthread]
LIBRARY_PATHS=[""]
if ( platform=="SLC5" and osv=="x86_64"):
    LIBRARY_PATHS=["/usr/lib64/boost141","/usr/lib64","/usr/local/lib"]
else:
    if ( platform=="SLC5"):
        LIBRARY_PATHS=["/usr/lib/boost141","/usr/lib","/usr/local/lib"]
    else:
        LIBRARY_PATHS=["/usr/lib","/usr/local/lib"]

#link flags
LIBRARY_PATHS.append("/opt/dhcal/yami/lib")
LDFLAGS=["-fPIC","-dynamiclib"]

env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)

ydaq=env.SharedLibrary("#lib/ydaq",source=LIBRARY_SOURCES)

LIBRARIES=["ydaq","yamicore","yamicpp","yamicore","yamicpp","pthread",boostsystem,boostthread]
LIBRARY_PATHS.append("./lib")
env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)

serverPP=env.Program("serverPP",source=Glob("src/serverPP.cxx"))
serverDIF=env.Program("serverDIF",source=Glob("src/serverDIF.cxx"))
clientDIF=env.Program("clientDIF",source=Glob("src/clientDIF.cxx"))
server_ns=env.Program("server_ns",source=Glob("src/server_ns.cxx"))
mcd=env.Program("mcd",source=Glob("src/mcd.cxx"))
serverEVB=env.Program("serverEVB",source=Glob("src/serverEVB.cxx"))
serverODB=env.Program("serverODB",source=Glob("src/serverODB.cxx"))




#MonServer_src=['cslm/NetMessage.cpp','cslm/MessageHandler.cc','cslm/NMServer.cc','cslm/MonServer.cc']
#MonClient_src=['cslm/NetMessage.cpp','cslm/MessageHandler.cc','cslm/NMClient.cc','cslm/MonClient.cc']

env.Install(DHCAL_ROOT+"/opt/dhcal/lib",[ydaq])
###env.Install("/opt/dhcal/lib",[netlink,cslm])

env.Alias('install',[DHCAL_ROOT+"/opt/dhcal/lib"])
