import sys,os,commands
import  os
import re
import sys

def SWIGSharedLibrary(env, library, sources, **args):
  swigre = re.compile('(.*).i')
  if env.WhereIs('swig') is None:
    sourcesbis = []
    for source in sources:
      cName = swigre.sub(r'\1_wrap.c', source)
      cppName = swigre.sub(r'\1_wrap.cc', source)
      if os.path.exists(cName):
        sourcesbis.append(cName)
      elif os.path.exists(cppName):
        sourcesbis.append(cppName)
      else:
        sourcesbis.append(source)
  else:
    sourcesbis = sources
 
  if 'SWIGFLAGS' in args:
    args['SWIGFLAGS'] += ['-python']
  else:
    args['SWIGFLAGS'] = ['-python'] + env['SWIGFLAGS']
  args['SHLIBPREFIX']=""
  if sys.version >= '2.5':
    args['SHLIBSUFFIX']=".pyd"
 
  cat=env.SharedLibrary(library, sourcesbis, **args)
  return cat
 




DHCAL_ROOT=os.path.abspath("..")

fres=os.popen('uname -r')
kl=fres.readline().split(".")

platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"
print kl[len(kl)-2][0:3]
fres=os.popen('uname -p')
kp=fres.readline()
osv=kp[0:len(kp)-1]

print platform,osv

Bit64=os.uname()[4]=='x86_64'

Arm=os.uname()[4]=='armv7l'

if Arm or platform=="UBUNTU":
  boostsystem='boost_system'
  boostthread='boost_thread'
else:
  boostsystem='boost_system-mt'
  boostthread='boost_thread-mt'

USEDB=os.path.isdir("/usr/include/ILCConfDB")


LIBRARY_SOURCES=Glob("#src/*.cpp")
if USEDB:
    LIBRARY_SOURCES=Glob("#src/*.cpp")
else:
    LIBRARY_SOURCES=commands.getoutput('ls src/*.cpp  | grep -v odbserver').split("\n")
INCLUDES=['include','/opt/dhcal/yami/include','/opt/dhcal/yami/src/cpp/examples/common_util']
if (platform=="SLC5"):
    INCLUDES.append('/usr/include/boost141')
CPPFLAGS=["-pthread","-O2","-DLINUX", "-DREENTRANT" ,"-Dlinux"]

# Daq includes
INCLUDES.append(DHCAL_ROOT+"/SDHCAL_Readout/include")
INCLUDES.append(DHCAL_ROOT+"/SDHCAL_common/include")
INCLUDES.append(DHCAL_ROOT+"/SDHCAL_EventReader/include")
INCLUDES.append(os.path.join(os.getenv("LCIODIR"),"include"))
INCLUDES.append(os.path.join(os.getenv("LCIODIR"),"include","IMPL"))
INCLUDES.append("/usr/include/jsoncpp")
INCLUDES.append("/usr/include/libxml2")
if USEDB:
    INCLUDES.append(DHCAL_ROOT+"/SDHCAL_DB/include")
    INCLUDES.append("/usr/include/ILCConfDB")
#SDHCAL_RPI=os.getenv("SDHCAL_RPI")
#if (SDHCAL_RPI==None):
#	print "please specify SDHCAL_RPI"
#	exit()
#INCLUDES.append(SDHCAL_RPI+"/include")
INCLUDES.append(commands.getoutput("python -c 'import distutils.sysconfig as conf; print conf.get_python_inc()'"))

#Library ROOT + some of XDAQ + DB 
ROOT_LIBS=[lib[2:] for lib in filter(lambda x: (x[:2]=="-l"), commands.getoutput("$ROOTSYS/bin/root-config --libs --ldflags --glibs").split(" "))
]
ROOT_LIBS.append('XMLIO')
ROOT_LIBPATH=[lib[2:] for lib in filter(lambda x: (x[:2]=="-L"), commands.getoutput("$ROOTSYS/bin/root-config --libs ").split(" "))]








LIBRARIES=ROOT_LIBS+["pthread","jsoncpp",boostsystem,boostthread]
LIBRARY_PATHS=ROOT_LIBPATH
if ( platform=="SLC5" and osv=="x86_64"):
    LIBRARY_PATHS=ROOT_LIBPATH+["/usr/lib64/boost141","/usr/lib64","/usr/local/lib"]
else:
    if ( platform=="SLC5"):
        LIBRARY_PATHS=ROOT_LIBPATH+["/usr/lib/boost141","/usr/lib","/usr/local/lib"]
    else:
        LIBRARY_PATHS=ROOT_LIBPATH+["/usr/lib","/usr/local/lib"]

#link flags
LIBRARY_PATHS.append("/opt/dhcal/yami/lib")

#Daq lib path
LIBRARY_PATHS.append(DHCAL_ROOT+"/opt/dhcal/lib")
LIBRARY_PATHS.append(os.path.join(os.getenv("LCIODIR"),"lib"))
LIBRARY_PATHS.append(commands.getoutput("python -c 'import distutils.sysconfig as conf; print conf.PREFIX'")+"/lib")


LDFLAGS=["-fPIC","-dynamiclib"]

#DAQ libraries
LIBRARIES.append(["lcio","sio","netlink","cslm","SDHCALcommon","SDHCALReadout","SDHCALEventReader"])
if (USEDB):
    LIBRARIES.append(['dl','uuid', 'm', 'occi', 'clntsh', 'nnz11', 'ilcconfdb', 'dbi','xerces-c','SDHCALDB'])



env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)

ydaq=env.SharedLibrary("#lib/ydaq",source=LIBRARY_SOURCES)

LIBRARIES.append(["yamicore","yamicpp","yamicore","yamicpp","pthread",boostsystem,boostthread])


# Severs
LIBRARIES=["ydaq"]+LIBRARIES

LIBRARY_PATHS.append("./lib")
# SWIG
SWIGSF=["-c++","-classic"]

for i in INCLUDES:
    SWIGSF.append("-I"+i)




env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS="-O2", LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS,SWIGFLAGS=SWIGSF)
env['BUILDERS']['PythonModule'] = SWIGSharedLibrary
serverPP=env.Program("bin/serverPP",source=Glob("src/serverPP.cxx"))

#clientDIF=env.Program("bin/clientDIF",source=Glob("src/clientDIF.cxx"))
#server_ns=env.Program("bin/server_ns",source=Glob("src/server_ns.cxx"))
#mcd=env.Program("bin/mcd",source=Glob("src/mcd.cxx"))
yamidif=env.Program("bin/yamidif",source=Glob("src/serverDIF.cxx"))
yamievb=env.Program("bin/yamievb",source=Glob("src/serverEVB.cxx"))
if (USEDB):
  yamiodb=env.Program("bin/yamiodb",source=Glob("src/serverODB.cxx"))
yamizup=env.Program("bin/yamizup",source=Glob("src/serverZUP.cxx"))
yamiccc=env.Program("bin/yamiccc",source=Glob("src/serverCCC.cxx"))



#Python module
_YDaq=env.PythonModule('_LYDaq', ['LYDaq.i'],LINKFLAGS="-dynamiclib", LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)

#MonServer_src=['cslm/NetMessage.cpp','cslm/MessageHandler.cc','cslm/NMServer.cc','cslm/MonServer.cc']
#MonClient_src=['cslm/NetMessage.cpp','cslm/MessageHandler.cc','cslm/NMClient.cc','cslm/MonClient.cc']

env.Install(DHCAL_ROOT+"/opt/dhcal/lib",[ydaq])
if (USEDB):
    env.Install(DHCAL_ROOT+"/opt/dhcal/bin",[yamidif,yamievb,yamievb,yamizup,yamiccc,yamiodb])
else:
    env.Install(DHCAL_ROOT+"/opt/dhcal/bin",[yamidif,yamievb,yamievb,yamizup,yamiccc])

###env.Install("/opt/dhcal/lib",SDHCALDimDaq)
###env.Install("/opt/dhcal/include/readout",myinc)

env.Alias('install', [DHCAL_ROOT+"/opt/dhcal/lib",DHCAL_ROOT+"/opt/dhcal/bin"])
