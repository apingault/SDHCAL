import sys,os,commands
import  os
import re
import sys

def SWIGSharedLibrary(env, library, sources, **args):
  swigre = re.compile('(.*).i')
  if env.WhereIs('swig') is None:
    sourcesbis = []
    for source in sources:
      cName = swigre.sub(r'\1_wrap.c', source)
      cppName = swigre.sub(r'\1_wrap.cc', source)
      if os.path.exists(cName):
        sourcesbis.append(cName)
      elif os.path.exists(cppName):
        sourcesbis.append(cppName)
      else:
        sourcesbis.append(source)
  else:
    sourcesbis = sources
 
  if 'SWIGFLAGS' in args:
    args['SWIGFLAGS'] += ['-python']
  else:
    args['SWIGFLAGS'] = ['-python'] + env['SWIGFLAGS']
  args['SHLIBPREFIX']=""
  if sys.version >= '2.5':
    args['SHLIBSUFFIX']=".pyd"
 
  cat=env.SharedLibrary(library, sourcesbis, **args)
  return cat
 


# environment
#import xdaq
#print xdaq.INCLUDES
#print xdaq.LIBRARY_PATHS
#print xdaq.LIBRARIES

#print "----------------------------------------------"
Decider('MD5-timestamp')
XDAQ_ROOT="/opt/xdaq"
DIM_ROOT="/usr/local/dim"
DHCAL_ROOT=os.path.abspath("..")


Bit64=False
Bit64=os.uname()[4]=='x86_64'

NetLink=DHCAL_ROOT+"/netLink"
if ( not os.path.exists(NetLink)):
  NetLink=os.getenv("HOME")+"/netLink"
kl=os.uname()[2].split(".")
platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"

Use_Dim=True
#os.environ.has_key("DIM_DNS_NODE")

# includes
INCLUDES=['include',"/usr/include","/usr/include/ILCConfDB","/usr/include/boost141/",DHCAL_ROOT+"/SDHCAL_common/include",DHCAL_ROOT+"/SDHCAL_DB/include",DHCAL_ROOT+"/SDHCAL_Readout/include"]

if (Use_Dim):
  INCLUDES.append(DIM_ROOT+"/dim")
  if (platform=="SLC5"):
    INCLUDES.append("/opt/xdaq/include/")
    INCLUDES.append("/opt/xdaq/include/dim")

INCLUDES.append(commands.getoutput("python -c 'import distutils.sysconfig as conf; print conf.get_python_inc()'"))

CPPFLAGS=["-pthread","-O2","-DLINUX", "-DREENTRANT" ,"-Dlinux", "-DLITTLE_ENDIAN__ ", "-Dx86",  "-DXERCES=2", "-DDAQ_VERSION_2"]

#Library ROOT + some of XDAQ + DB 


#LIBRARIES=['pthread', 'toolbox', 'xcept', 'config', 'log4cplus', 'asyncresolv', 'uuid', 'm', 'DHCDBUtils', 'occi', 'clntsh', 'nnz11', 'ilcconfdb', 'dbi', 'ftd2xx', 'stdc++','DHCEvent','ftdi','ftdipp']
LIBRARIES=[ 'dl','uuid', 'm', 'occi', 'clntsh', 'nnz11', 'ilcconfdb', 'dbi','xerces-c',  'pthread', 'stdc++','boost_system-mt','boost_thread-mt','SDHCALcommon','SDHCALDB','dim','netlink','cslm']



#Library path XDAQ,DHCAL and ROOT + Python
if (Bit64):
	LIBRARY_PATHS=["/opt/xdaq/lib","/usr/lib64","/usr/local/lib",DIM_ROOT+"/linux",DHCAL_ROOT+"/opt/dhcal/lib"]
else:
  LIBRARY_PATHS=["/usr/lib","/usr/local/lib",DIM_ROOT+"/linux",DHCAL_ROOT+"/opt/dhcal/lib"]
LIBRARY_PATHS.append(commands.getoutput("python -c 'import distutils.sysconfig as conf; print conf.PREFIX'")+"/lib")

if Use_Dim:
   CPPFLAGS.append("-DUSE_DIM")
   if (platform=="SLC5"):
     LIBRARY_PATHS.append("/opt/xdaq/lib")
#   INCLUDES.append("/opt/xdaq/include/dim")
#   LIBRARIES.append("dim")
#   LIBRARY_PATHS.append("/opt/xdaq/lib")


#link flags
LDFLAGS=[]
LDFLAGS.append("-fPIC -dynamiclib ")

# SWIG
SWIGSF=["-c++","-classic"]

for i in INCLUDES:
    SWIGSF.append("-I"+i)
print SWIGSF

# Create the Environment
env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS,SWIGFLAGS=SWIGSF)

#print "CC is:",env.subst('$CPPPATH')

env['BUILDERS']['PythonModule'] = SWIGSharedLibrary


# Library source
LIBRARY_SOURCES=Glob("#src/*.cc")

#Shared library
SDHCALDimDb=env.SharedLibrary("#lib/SDHCALDimDb",LIBRARY_SOURCES)



#Daemon 
EXE_LIBPATH=LIBRARY_PATHS
EXE_LIBPATH.append("#lib")
EXE_LIBS=LIBRARIES
EXE_LIBS.append("SDHCALDimDb")
ddbs=env.Program("bin/dimdb",source="src/ddb.cxx",LIBPATH=EXE_LIBPATH,LIBS=EXE_LIBS)

#Python module
#_SDHCALDimDb=env.PythonModule('_LSDHCALDimDb', ['LSDHCALDimDb.i'],LIBPATH="#lib",LIBS="SDHCALDimDb")

myinc=[]
for x in Glob("#include/*.h"):
  myinc.append("include/"+x.name)
print myinc
env.Install(DHCAL_ROOT+"/opt/dhcal/lib",SDHCALDimDb)
env.Install(DHCAL_ROOT+"/opt/dhcal/bin",ddbs)
###env.Install("/opt/dhcal/lib",SDHCALDimDb)
###env.Install("/opt/dhcal/include/readout",myinc)

env.Alias('install', [DHCAL_ROOT+"/opt/dhcal/lib",DHCAL_ROOT+"/opt/dhcal/bin"])



